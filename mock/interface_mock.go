// Code generated by MockGen. DO NOT EDIT.
// Source: ../interface.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	virtualbox "github.com/terra-farm/go-virtualbox"
)

// MockManager is a mock of Manager interface.
type MockManager struct {
	ctrl     *gomock.Controller
	recorder *MockManagerMockRecorder
}

// MockManagerMockRecorder is the mock recorder for MockManager.
type MockManagerMockRecorder struct {
	mock *MockManager
}

// NewMockManager creates a new mock instance.
func NewMockManager(ctrl *gomock.Controller) *MockManager {
	mock := &MockManager{ctrl: ctrl}
	mock.recorder = &MockManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockManager) EXPECT() *MockManagerMockRecorder {
	return m.recorder
}

// ListMachines mocks base method.
func (m *MockManager) ListMachines(arg0 context.Context) ([]*virtualbox.Machine, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListMachines", arg0)
	ret0, _ := ret[0].([]*virtualbox.Machine)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListMachines indicates an expected call of ListMachines.
func (mr *MockManagerMockRecorder) ListMachines(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListMachines", reflect.TypeOf((*MockManager)(nil).ListMachines), arg0)
}

// Machine mocks base method.
func (m *MockManager) Machine(arg0 context.Context, arg1 string) (*virtualbox.Machine, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Machine", arg0, arg1)
	ret0, _ := ret[0].(*virtualbox.Machine)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Machine indicates an expected call of Machine.
func (mr *MockManagerMockRecorder) Machine(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Machine", reflect.TypeOf((*MockManager)(nil).Machine), arg0, arg1)
}

// UpdateMachine mocks base method.
func (m *MockManager) UpdateMachine(arg0 context.Context, arg1 *virtualbox.Machine) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateMachine", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateMachine indicates an expected call of UpdateMachine.
func (mr *MockManagerMockRecorder) UpdateMachine(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateMachine", reflect.TypeOf((*MockManager)(nil).UpdateMachine), arg0, arg1)
}
